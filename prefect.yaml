# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: movie-etl
prefect-version: 3.0.11

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: alfiannajih/movie-etl
    tag: v1
    dockerfile: auto

# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect_docker.deployments.steps.push_docker_image:
    requires: prefect-docker>=0.3.1
    image_name: '{{ build_image.image_name }}'
    tag: '{{ build_image.tag }}'

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.set_working_directory:
    directory: /opt/prefect/movie-etl

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: Movie ETL Deployment
  version:
  tags: []
  concurrency_limit:
  description:
  entrypoint: main.py:movies_flow
  parameters: {}
  work_pool:
    name: "cloud-run-worker"
    job_variables:
      image: "alfiannajih/movie-etl:v1"
      env:
        TMDB_API_KEY: "{{ $TMDB_API_KEY }}"
        POSTGRES_USER: "{{ $POSTGRES_USER }}"
        POSTGRES_PASSWORD: "{{ $POSTGRES_PASSWORD }}"
        POSTGRES_HOST: "{{ $POSTGRES_HOST }}"
        POSTGRES_DB: "{{ $POSTGRES_DB }}"
        POSTGRES_PORT: "{{ $POSTGRES_PORT }}"

  enforce_parameter_schema: true
  schedules:
  - cron: 0 0 * * 0
    timezone: UTC
    day_or: true
    active: true
